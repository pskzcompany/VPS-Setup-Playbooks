---

- name: Install debian base packages
  apt:
    name: "{{ package_list }}"
  vars:
    package_list:
      - lsb-release
      - apt-transport-https
      - ca-certificates
      - sudo
      - vim
      - wget
      - curl
      - atop
      - htop
      - ufw
  when: ansible_facts['os_family'] == "Debian"

- name: Configure ufw defaults
  ufw: direction={{ item.direction }} policy={{ item.policy }}
  with_items:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }
  notify:
    - restart ufw
  when: ansible_facts['os_family'] == "Debian"

- name: Configure ufw rules
  ufw: rule=limit port=22 proto=tcp
  when: ansible_facts['os_family'] == "Debian"

- name: Enable ufw
  ufw: state=enabled
  when: ansible_facts['os_family'] == "Debian"

- name: enable ufw
  systemd:
    name: ufw
    state: started
    enabled: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Add apt-key for latest nginx repo
  apt_key:
    url: https://nginx.org/keys/nginx_signing.key
    id: ABF5BD827BD9BF62
  when: ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] != "10"

- name: Add nginx mainline debian nginx repo # to get the latest nginx (not the most stable) version
  apt_repository:
    repo: deb http://nginx.org/packages/mainline/debian {{ ansible_facts['distribution_release'] }} nginx
  when: ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] != "10"

- name: Add apt-key for ondrej php repo
  apt_key:
    url: https://packages.sury.org/php/apt.gpg
  when: ansible_facts['distribution'] == "Debian"

- name: Add packages.sury.org/php debian php repo
  apt_repository:
    update_cache: yes
    repo: deb https://packages.sury.org/php {{ ansible_facts['distribution_release'] }} main
  when: ansible_facts['distribution'] == "Debian"

- name: Add ubuntu nginx mainline repo
  apt_repository:
    repo: ppa:nginx/stable
  when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] != "20"

- name: Add ppa:ondrej/php php ubuntu repo
  apt_repository:
    update_cache: yes
    repo: ppa:ondrej/php
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Disabling SELinux state
  selinux:
    state: disabled
  when: ansible_facts['os_family'] == "RedHat"

- name: Install centos base packages
  yum:
    name: "{{ package_list }}"
    state: latest
    update_cache: yes
  vars:
    package_list:
      - yum-utils
      - firewalld
      - curl
      - vim
      - htop
      - atop
      - wget
  when: ansible_facts['os_family'] == "RedHat"

- name: Ensure firewalld started
  systemd:
    name=firewalld
    state=started
    enabled=true
  when: ansible_facts['os_family'] == "RedHat"

- name: Add nginx mainline repo
  yum_repository:
    name: nginx-official-repo
    description: Official NGINX yum repository
    gpgcheck: no
    baseurl: http://nginx.org/packages/centos/$releasever/$basearch/
  when: ansible_facts['os_family'] == "RedHat" and ansible_facts['distribution_major_version'] != "8"

- name: Tune bash history for CentOS and Debian
  blockinfile:
    dest: /etc/profile.d/history.sh
    create: yes
    owner: root
    group: root
    mode: 0644
    block: |
      export HISTCONTROL=ignoreboth:erasedups
      export PROMPT_COMMAND='RETRN_VAL=$?; logger -p local6.info "$(whoami) [$$]: $(history 1 | sed "s/^[ :0-9-]\+//" ) [$RETRN_VAL]"; history -a'
      export HISTFILESIZE=4096
      export HISTSIZE=4096
      export HISTTIMEFORMAT='%F %T  '
      readonly HISTTIMEFORMAT HISTSIZE HISTFILESIZE PROMPT_COMMAND HISTCONTROL
  when: ansible_facts['distribution'] != "Ubuntu"

- name: Remove histtime.sh
  file:
    path: /etc/profile.d/histtime.sh
    state: absent
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Tune bash history for Ubuntu
  blockinfile:
    dest: /etc/profile.d/histtime.sh
    create: yes
    owner: root
    group: root
    mode: 0644
    block: |
      export HISTFILESIZE=4096
      export HISTSIZE=4096
      export HISTTIMEFORMAT='%F %T  '
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Enable SSH PAM
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#UsePAM'
    line: UsePAM yes
  when: ansible_facts['os_family'] == "Debian"
  register: UsePam 

- name: restart sshd
  service: name=sshd state=restarted enabled=yes
  when: UsePam.changed
