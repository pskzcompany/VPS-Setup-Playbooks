---
- name: add remi repository
  yum:
    disable_gpg_check: True
    name: http://mirror.neolabs.kz/remi/enterprise/remi-release-{{ ansible_distribution_major_version }}.rpm
    state: present

- name: install php-fpm
  yum:
    name: php{{ php_version }}-php-fpm
    enablerepo: remi-php{{ php_version }}
    update_cache: yes
    state: latest

- name: Enabled powertools repo # needed by libedit-devel on centos8
  shell: dnf config-manager --set-enabled powertools
  when: ansible_facts['distribution_major_version'] == "8"

- name: install libedit-devel # needed by php-devel package on centos8
  yum:
    name: libedit-devel
    enablerepo: PowerTools
    state: present
  when: ansible_facts['distribution_major_version'] == "8"

- name: install php modules for php version lower than 8
  yum:
    name: "{{ php_modules_notPHP8 }}"
    state: latest
    enablerepo: remi-php{{ php_version }}
  notify: restart centos php-fpm
  when: php_version != "80"


- name: install php modules for php 8
  yum:
    name: "{{ php_modules_PHP8 }}"
    state: latest
    enablerepo: remi-php{{ php_version }}
  notify: restart centos php-fpm
  when: php_version == "80"

- name: clear default pool file
  copy:
    content: '; disabled, use separate vhost pools'
    dest: /etc/opt/remi/php{{ php_version }}/php-fpm.d/www.conf
  notify: restart centos php-fpm

- name: create pool for a virtual host
  template:
    dest: /etc/opt/remi/php{{ php_version }}/php-fpm.d/{{ vhost }}.conf
    src: vhost_pool_centos.j2
  notify: restart centos php-fpm

- name: change upload size vars in php.ini
  ini_file:
    path: /etc/opt/remi/php{{ php_version }}/php.ini
    section: PHP
    option: "{{ item.options }}"
    value: "{{ item.value }}"
  loop:
    - { options: 'post_max_size', value: '64M' }
    - { options: 'upload_max_filesize', value: '64M' }
    - { options: 'short_open_tag', value: 'On' }
    - { options: 'cgi.fix_pathinfo', value: '0' }
    - { options: 'date.timezone', value: 'Asia/Almaty' }
  notify: restart centos php-fpm

- name: make remi php binary work using php command
  file:
    state: link
    src: /opt/remi/php{{php_version}}/root/bin/{{ item.source }}
    dest: /usr/bin/php{{ item.target }}
  loop:
    - { source: 'php', target: ''}
    - { source: 'php-cgi', target: '-cgi'}
    - { source: 'phar.phar', target: '-phar'}

- name: Create /var/www/ vhost subdir
  file:
    state: directory
    path: /var/www/{{ vhost }}/
    owner: apache
    group: apache
    mode: 0755

- name: copy index file into virtualhost root
  copy:
    src: index.php
    dest: /var/www/{{ vhost }}/index.php
    owner: apache
    group: apache
    mode: 0644

- name: add fpm handler block for nginx
  blockinfile:
    marker: ' '
    path: /etc/nginx/vhosts/{{ vhost }}.conf
    insertafter: '## handler ##'
    block: |
      location ~ \.php$ {
              fastcgi_index index.php;
              fastcgi_param PHP_ADMIN_VALUE "sendmail_path = /usr/sbin/sendmail -t -i -f webmaster@{{ vhost }}";
              fastcgi_pass unix:/var/run/{{ vhost }}.sock;
              fastcgi_split_path_info ^((?U).+\.ph(?:p\d*|tml))(/?.+)$;
              try_files $uri =404;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;

              fastcgi_read_timeout 300;
              fastcgi_busy_buffers_size 16k;
              fastcgi_buffers 32 16k;
      }
  notify: restart nginx

- name: ensure fpm is started
  service:
    name: php{{ php_version }}-php-fpm
    state: started
    enabled: yes
