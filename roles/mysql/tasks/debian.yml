---
- name: Install mysql and tools for Ubuntu
  apt:
    state: latest
    name: "{{ mysql_packages }}"
  vars:
    mysql_packages:
    - mysql-server
    - python-mysqldb
  when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] != "20" and ansible_facts['distribution_major_version'] != "22"

- name: Install mysql and tools for Ubuntu 20
  apt:
    state: latest
    name: "{{ mysql_packages }}"
  vars:
    mysql_packages:
    - mysql-server
    - python3-mysqldb
  when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "20" or ansible_facts['distribution_major_version'] == "22"

- name: Install mysql for Debian
  apt:
    state: latest
    name: mariadb-server
  when: ansible_facts['distribution'] == "Debian"

- name: Install python-mysqldb for Debian 10
  apt:
    state: latest
    name: python-mysqldb
  when: ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] != "11"

- name: Install python3-mysqldb for Debian
  apt:
    state: latest
    name: python3-mysqldb
  when: ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] == "11"

- name: change mysql bind-address
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    regexp: '127\.0\.0\.1'
    line: 'bind-address = 127.0.0.1'
  when: ansible_facts['distribution'] == "Ubuntu"

- name: change mysql bind-address
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    insertafter: '^# datadir'
    line: 'default-authentication-plugin = mysql_native_password'
  when: ansible_facts['distribution'] == "Ubuntu"
# Этот фикс нужен поскольку дефолтный для mysql 8 метод caching_sha2_password поддерживается не всеми версиями php-расширений mysqli https://mysqlserverteam.com/upgrading-to-mysql-8-0-default-authentication-plugin-considerations/

- name: change mysql server character set
  lineinfile:
    path: /etc/mysql/mysql.conf.d/mysqld.cnf
    insertafter: '^# datadir'
    line: 'character_set_server = utf8'
  when: ansible_facts['distribution'] == "Ubuntu"
# а без этого фикса с кодировой utf8mb4 phpmyadmin не пускает на php5.6

- name: change mysql bind-address
  lineinfile:
    path: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: '127\.0\.0\.1'
    line: 'bind-address = 127.0.0.1'
  when: ansible_facts['distribution'] == "Debian"

- name: Ensure mysql is started and enabled
  service:
    name: mysql
    state: restarted
    enabled: yes

- name: add website db
  mysql_db:
    state: present
    name: "`{{ short_vhost }}`"
    collation: utf8_unicode_ci
  tags: website_stack

- name: add db user
  mysql_user:
    state: present
    name: "{{ short_vhost }}"
    host: localhost
    password: "{{ lookup('password', '/root/03-mysql_password chars=ascii_letters,digits,hexdigits length=15') }}"
    priv: '{{ short_vhost }}.*:ALL'
  tags: website_stack

- name: Set dbuser password
  set_fact:
    dbuser_password: "{{ lookup('file', '/root/03-mysql_password') }}"

- name: insert mysql user name into user password file
  blockinfile:
    dest: /root/03-mysql_password
    insertbefore: BOF
    block: |

      Данные для доступа к базе данных:
      Имя БД: {{ short_vhost }}
      Пользователь: {{ short_vhost }}
  tags: website_stack

- name: add new superuser if debian
  mysql_user:
    state: present
    name: "admin"
    host: localhost
    password: "{{ lookup('password', '/root/03-mysql-admin_password chars=ascii_letters,digits,hexdigits length=15') }}"
    priv: '*.*:ALL,GRANT'
  tags: website_stack
  when: ansible_facts['distribution'] == "Debian"

- name: insert debian new superuser name into user password file
  blockinfile:
    dest: /root/03-mysql-admin_password
    insertbefore: BOF
    block: |

      Админ-пользователь mysql:
      Логин: admin
  tags: website_stack
  when: ansible_facts['distribution'] == "Debian"

- name: create pfxadmin db
  mysql_db:
    name: postfixadmin
    collation: utf8_unicode_ci
  tags: mailserver

- name: create pfxadmin mysql user
  mysql_user:
    name: postfixadmin
    password: "{{ lookup('password', '/root/060-pfxadmin_db_password chars=ascii_letters,digits length=20') }}"
    priv: 'postfixadmin.*:ALL'
    host: localhost
  tags: mailserver

- name: remove anonymous users
  mysql_user:
    state: absent
    name: ''
    host_all: yes

- name: remove test db
  mysql_db:
    state: absent
    name: test

- name: change root password
  mysql_user:
    state: present
    name: root
    host: localhost
    password: "{{ lookup('password', '/root/04-mysqlr_password chars=ascii_letters,digits,hexdigits length=15') }}"

- name: copy root mysql password file
  copy:
    dest: /root/.my.cnf
    src: root_my_cnf
    owner: root
    group: root
    mode: 0660

- name: add root password to root homedir my.cnf file
  replace:
    path: /root/.my.cnf
    regexp: '^password'
    replace: 'password="{{ file_contents }}"'
  vars:
    file_contents: "{{ lookup('file', '/root/04-mysqlr_password') }}"

- name: insert root mysql user name into root password file
  blockinfile:
    dest: /root/04-mysqlr_password
    insertbefore: BOF
    block: |

      Пароль от mysql root-пользователя:
