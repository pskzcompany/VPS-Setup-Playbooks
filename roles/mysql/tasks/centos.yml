---
- name: Add mariadb 10.4 repo
  yum_repository:
    name: MariaDB
    description: MariaDB 10.4 CentOS
    baseurl: http://yum.mariadb.org/10.4/centos{{ ansible_distribution_major_version }}-amd64
    gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB

- name: Fix module_hotfixes Mariadb repo
  lineinfile:
    path: /etc/yum.repos.d/MariaDB.repo
    insertafter: 'name ='
    regexp: '^module_hotfixes'
    line: 'module_hotfixes = 1'
  when: ansible_facts['distribution_major_version'] == "8"

- name: Install mariadb and trivia for centos 7
  yum:
    name: "{{ mariadb_packages }}"
  vars:
    mariadb_packages:
    - mariadb-server
    - MySQL-python
  when: ansible_facts['distribution_major_version'] != "8"

- name: Install boost-program-options and python3-PyMySQL
  dnf:
    name: "{{ mariadb_packages }}"
  vars:
    mariadb_packages:
    - boost-program-options
    - python3-PyMySQL
  when: ansible_facts['distribution_major_version'] == "8"

- name: Install mariadb-server for centos 8
  dnf:
    name: MariaDB-server
    disablerepo: AppStream 
  when: ansible_facts['distribution_major_version'] == "8"
#Disabling the AppStream repo is necessary for the time being in order for our MariaDB-server package to be found and used by dnf. And because the required boost-program-options package is located in the AppStream repo, it needs to be installed prior to installing MariaDB-server.

- name: Change mariadb bind-address
  lineinfile:
    path: /etc/my.cnf.d/server.cnf
    regexp: '^#bind-address'
    line: 'bind-address = 127.0.0.1'

- name: Ensure mariadb is started and enabled
  service:
    name: mariadb
    state: started
    enabled: yes

- name: change root password
  mysql_user:
    state: present
    name: root
    host: localhost
    login_unix_socket: /var/lib/mysql/mysql.sock 
    password: "{{ lookup('password', '/root/04-mysqlr_password chars=ascii_letters,digits,hexdigits length=15') }}"

- name: copy root mysql password file
  copy:
    dest: /root/.my.cnf
    src: root_my_cnf
    owner: root
    group: root
    mode: 0660

- name: add root password to root homedir my.cnf file
  replace:
    path: /root/.my.cnf
    regexp: '^password'
    replace: 'password="{{ file_contents }}"'
  vars:
    file_contents: "{{ lookup('file', '/root/04-mysqlr_password') }}"

- name: add website db
  mysql_db:
    state: present
    name: "{{ short_vhost }}"
    collation: utf8_unicode_ci
  tags: website_stack

- name: add db user
  mysql_user:
    state: present
    name: "{{ short_vhost }}"
    host: localhost
    password: "{{ lookup('password', '/root/03-mysql_password chars=ascii_letters,digits,hexdigits length=15') }}"
    priv: '{{ short_vhost }}.*:ALL'
  tags: website_stack

- name: Set dbuser password
  set_fact:
    dbuser_password: "{{ lookup('file', '/root/03-mysql_password') }}"

- name: insert mysql user name into user password file
  blockinfile:
    dest: /root/03-mysql_password
    insertbefore: BOF
    block: |

      Данные для доступа к базе данных:
      Имя БД: {{ short_vhost }}
      Пользователь: {{ short_vhost }}
  tags: website_stack

- name: create pfxadmin db
  mysql_db:
    name: postfixadmin
    collation: utf8_unicode_ci
  tags: mailserver

- name: create pfxadmin mysql user
  mysql_user:
    name: postfixadmin
    password: "{{ lookup('password', '/root/060-pfxadmin_db_password chars=ascii_letters,digits length=20') }}"
    priv: 'postfixadmin.*:ALL'
    host: localhost
  tags: mailserver

- name: remove anonymous users
  mysql_user:
    state: absent
    name: ''
    host_all: yes

- name: remove test db
  mysql_db:
    state: absent
    name: test

- name: insert root mysql user name into root password file
  blockinfile:
    dest: /root/04-mysqlr_password
    insertbefore: BOF
    block: |

      Пароль от mysql root-пользователя:

#TODO
# 1. add log-error=/var/log/mariadb/mariadb.log to [mysqld]
# 2. add other main parameters
