---
- name: install python-passlib for centos7
  yum:
    name: python-passlib
    state: latest
  when: ansible_facts['distribution_major_version'] != "8"

- name: install python3-passlib for centos8
  yum:
    name: python3-passlib
    state: latest
  when: ansible_facts['distribution_major_version'] == "8"

- name: check a php version and register a var
  shell: php -v | grep 5.6
  register: php_version_for_pma
  ignore_errors: yes

- name: download phpmyadmin latest 
  get_url:
    url: https://files.phpmyadmin.net/phpMyAdmin/5.1.1/phpMyAdmin-5.1.1-all-languages.zip
    dest: /usr/share/phpMyAdmin-latest-all-languages.zip
    validate_certs: false
  when: php_version_for_pma.rc != 0

- name: download phpmyadmin with old php support
  get_url:
    url: https://files.phpmyadmin.net/phpMyAdmin/4.9.5/phpMyAdmin-4.9.5-all-languages.zip
    dest: /usr/share/phpMyAdmin-4.9.5-all-languages.zip
    validate_certs: false
  when: php_version_for_pma.rc == 0

- name: install phpmyadmin
  shell: |
    unzip /usr/share/phpMyAdmin-*-all-languages.zip -d /usr/share/
    mv /usr/share/phpMyAdmin-*-all-languages/ /usr/share/phpmyadmin/
    cp /usr/share/phpmyadmin/config.sample.inc.php /usr/share/phpmyadmin/config.inc.php
    rm /usr/share/phpMyAdmin-*-all-languages.zip
  args:
    warn: false

- name: generate pma secret
  lineinfile:
    path: /usr/share/phpmyadmin/config.inc.php
    line: "$cfg['blowfish_secret'] = '{{ lookup('password', 'chars=ascii_letters,digits,hexdigits,punctuation length=32') }}';"
    regexp: '.*blowfish_secret.*'

- name: add mysqli extension line into config
  lineinfile:
    path: /usr/share/phpmyadmin/config.inc.php
    line: "$cfg['Servers'][$i]['extension'] = 'mysqli';"
    insertafter: '.*auth_type.*'

- name: create pma temp dir
  file:
    state: directory
    path: /usr/share/phpmyadmin/tmp/
    group: apache
    mode: 0770

- name: check if there is apache
  stat:
    path: /usr/sbin/httpd
  register: httpd_status

- name: check if there is php-fpm
  stat:
    path: /opt/remi/php{{ php_version }}/root/usr/sbin/php-fpm
  register: php_fpm_status

- name: copy fpm nginx config
  copy:
    src: pma_centos_fpm.conf
    dest: /etc/opt/remi/php{{ php_version }}/php-fpm.d/phpmyadmin.conf
  notify: restart php-fpm centos
  when: php_fpm_status.stat.exists

- name: copy phpmyadmin nginx conf block
  blockinfile:
    marker: ''
    regexp: '^\t## pma'
    block: |
      rewrite ^/pma/?(.*)$ /phpmyadmin/$1 redirect;

      location /phpmyadmin/setup {
          deny all;
      }

      location /phpmyadmin/ {
        auth_basic "Speak, friend, and enter.";
        auth_basic_user_file conf.d/htpasswd;

        root /usr/share;
        fastcgi_index index.php;
        fastcgi_pass unix:/var/run/phpmyadmin.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|avi|djvu|mp3)$ {
          expires max;
        }
      }

    path: /etc/nginx/vhosts/{{ ansible_default_ipv4.address }}.conf
  notify: restart nginx
  when: php_fpm_status.stat.exists and frontend == "nginx"

- name: copy modphp nginx handler config
  blockinfile:
    marker: ''
    regexp: '^\t## pma'
    block: |
      rewrite ^/pma/?(.*)$ /phpmyadmin/$1 redirect;

      location /phpmyadmin/setup {
        deny all;
      }

      location /phpmyadmin/ {
        root /usr/share;

        auth_basic "Speak, friend, and enter.";
        auth_basic_user_file conf.d/htpasswd;

        proxy_pass http://127.0.0.1:8080;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_read_timeout 300;
        client_max_body_size 256m;

        proxy_buffer_size 16k;
        proxy_buffers 32 16k;

        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|avi|djvu|mp3)$ {
          expires max;
        }
      }

    path: /etc/nginx/vhosts/{{ ansible_default_ipv4.address }}.conf
  when: httpd_status.stat.exists and frontend == "nginx"
  notify: restart nginx

- name: copy httpd vhost config
  template:
    src: pma_centos_apache.conf
    dest: /etc/httpd/conf.d/{{ ansible_default_ipv4.address }}.conf
  when: httpd_status.stat.exists
  notify: restart httpd

- name: copy apache base auth handler config
  blockinfile:
    marker: ''
    regexp: '^\t#Basic_auth'
    block: |
      AuthType Basic
      AuthName "Speak, friend, and enter."
      AuthUserFile /etc/httpd/.htpasswd
      Require valid-user
    path: /etc/httpd/conf.d/{{ ansible_default_ipv4.address }}.conf
  when: httpd_status.stat.exists and frontend == "apache"
  notify: restart apache

- name: Ensure the default Apache site port is 8080
  lineinfile:
    path: /etc/httpd/conf.d/{{ vhost }}.conf
    regexp: '^<VirtualHost'
    line: '<VirtualHost 127.0.0.1:8080>'
  notify: restart httpd
  when: frontend == "nginx"

- name: add http auth for pma
  htpasswd:
    path: /etc/nginx/conf.d/htpasswd
    name: pma_admin
    password: "{{ lookup('password', '/root/02-pma_password chars=ascii_letters,digits,hexdigits length=15') }}"
  notify: restart nginx
  when: frontend == "nginx"

- name: add http auth for pma
  htpasswd:
    path: /etc/httpd/.htpasswd
    name: pma_admin
    password: "{{ lookup('password', '/root/02-pma_password chars=ascii_letters,digits,hexdigits length=15') }}"
  notify: restart apache2
  when: frontend == "apache"

- name: insert pmd_admin user name into password file
  blockinfile:
    dest: /root/02-pma_password
    insertbefore: BOF
    block: |

      Веб-интерфейс для работы с базой данных:
      http://{{ ansible_default_ipv4.address }}/pma/
      Данные для http авторизации:
      Логин: pma_admin
