---
- name: install python-passlib
  apt:
    name: python-passlib
    state: latest
  when: ansible_facts['distribution_major_version'] != "20" and ansible_facts['distribution_major_version'] != "11"

- name: install python3-passlib for Ubuntu 20 and Debian 11
  apt:
    name: python3-passlib
    state: latest
  when: ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] == "20" or ansible_facts['distribution'] == "Debian" and ansible_facts['distribution_major_version'] == "11"

- name: check a php version and register a var
  shell: php -v | grep 5.6
  register: php_version_for_pma
  ignore_errors: yes

- name: download phpmyadmin latest 
  get_url:
    url: https://files.phpmyadmin.net/phpMyAdmin/5.1.1/phpMyAdmin-5.1.1-all-languages.zip
    dest: /usr/share/phpMyAdmin-latest-all-languages.zip
    validate_certs: false
  when: php_version_for_pma.rc != 0

- name: download phpmyadmin with old php support
  get_url:
    url: https://files.phpmyadmin.net/phpMyAdmin/4.9.5/phpMyAdmin-4.9.5-all-languages.zip
    dest: /usr/share/phpMyAdmin-4.9.5-all-languages.zip
    validate_certs: false
  when: php_version_for_pma.rc == 0

- name: install phpmyadmin
  shell: |
    unzip /usr/share/phpMyAdmin-*-all-languages.zip -d /usr/share/
    mv /usr/share/phpMyAdmin-*-all-languages/ /usr/share/phpmyadmin/
    cp /usr/share/phpmyadmin/config.sample.inc.php /usr/share/phpmyadmin/config.inc.php
    rm /usr/share/phpMyAdmin-*-all-languages.zip
  args:
    warn: false

- name: generate pma secret
  lineinfile:
    path: /usr/share/phpmyadmin/config.inc.php
    line: "$cfg['blowfish_secret'] = '{{ lookup('password', 'chars=ascii_letters,digits,hexdigits,punctuation length=32') }}';"
    regexp: '.*blowfish_secret.*'

- name: add mysqli extension line into config
  lineinfile:
    path: /usr/share/phpmyadmin/config.inc.php
    line: "$cfg['Servers'][$i]['extension'] = 'mysqli';"
    insertafter: '.*auth_type.*'

- name: create pma temp dir
  file:
    state: directory
    path: /usr/share/phpmyadmin/tmp/
    group: www-data
    mode: 0770

- name: check if there is apache
  stat:
    path: /etc/apache2/apache2.conf
  register: apache2_status

- name: check if there is php-fpm
  stat:
    path: /usr/sbin/php-fpm{{ php_version_u }}
  register: php_fpm_status

- name: copy fpm pool
  copy:
    src: pma_debian_fpm.conf
    dest: /etc/php/{{ php_version_u }}/fpm/pool.d/phpmyadmin.conf
  when: php_fpm_status.stat.exists
  notify: restart php-fpm debian

- name: copy fpm nginx config
  blockinfile:
    marker: ''
    insertafter: '^\t## pma'
    block: |
      rewrite ^/pma/?(.*)$ /phpmyadmin/$1 redirect;

      location /phpmyadmin/setup {
          deny all;
      }

      location /phpmyadmin/ {
        auth_basic "Speak, friend, and enter.";
        auth_basic_user_file conf.d/htpasswd;

        root /usr/share;
        fastcgi_index index.php;
        fastcgi_pass unix:/var/run/php/phpmyadmin.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|avi|djvu|mp3)$ {
          expires max;
        }
      }

    path: /etc/nginx/vhosts/{{ ansible_default_ipv4.address }}.conf
  when: php_fpm_status.stat.exists
  notify: restart nginx

- name: copy modphp nginx handler confing
  blockinfile:
    marker: ''
    insertafter: '^\t## pma'
    block: |
      rewrite ^/pma/?(.*)$ /phpmyadmin/$1 redirect;

      location /phpmyadmin/setup {
        deny all;
      }

      location /phpmyadmin/ {
        root /usr/share;
        auth_basic "Speak, friend, and enter.";
        auth_basic_user_file conf.d/htpasswd;

        proxy_pass http://127.0.0.1:8080;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_read_timeout 300;
        client_max_body_size 256m;

        proxy_buffer_size 16k;
        proxy_buffers 32 16k;

        location ~* ^.+\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|swf|flv|avi|djvu|mp3)$ {
          expires max;
        }
      }

    path: /etc/nginx/vhosts/{{ ansible_default_ipv4.address }}.conf
  when: apache2_status.stat.exists and frontend == "nginx"
  notify: restart nginx

- name: copy apache vhost config
  template:
    src: pma_debian_apache.conf.j2
    dest: /etc/apache2/sites-available/{{ ansible_default_ipv4.address }}.conf
  when: apache2_status.stat.exists and frontend == "nginx"
  notify: restart apache2

- name: copy apache vhost config
  template:
    src: pma_debian_apache_lamp.conf.j2
    dest: /etc/apache2/sites-available/{{ ansible_default_ipv4.address }}.conf
  when: apache2_status.stat.exists and frontend == "apache"
  notify: restart apache2


- name: Ensure the default Apache port is 8080
  lineinfile:
    path: /etc/apache2/sites-available/{{ vhost }}.conf
    regexp: '^<VirtualHost'
    line: '<VirtualHost 127.0.0.1:8080>'
  notify: restart apache2
  when: frontend == "nginx"

- name: create apache vhost file symlink
  file:
    state: link
    path: /etc/apache2/sites-enabled/{{ ansible_default_ipv4.address }}.conf
    src: /etc/apache2/sites-available/{{ ansible_default_ipv4.address }}.conf
  when: apache2_status.stat.exists
  notify: restart apache2

- name: add http auth for pma
  htpasswd:
    path: /etc/nginx/conf.d/htpasswd
    name: pma_admin
    password: "{{ lookup('password', '/root/02-pma_password chars=ascii_letters,digits,hexdigits length=15') }}"
  notify: restart nginx
  when: frontend == "nginx"

- name: add http auth for pma
  htpasswd:
    path: /etc/apache2/.htpasswd
    name: pma_admin
    password: "{{ lookup('password', '/root/02-pma_password chars=ascii_letters,digits,hexdigits length=15') }}"
  notify: restart apache2
  when: frontend == "apache"

- name: insert pmd_admin user name into password file
  blockinfile:
    dest: /root/02-pma_password
    insertbefore: BOF
    block: |

      Веб-интерфейс для работы с базой данных:
      http://{{ ansible_default_ipv4.address }}/pma/
      Данные для http авторизации:
      Логин: pma_admin
