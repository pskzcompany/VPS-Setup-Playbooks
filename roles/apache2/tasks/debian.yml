---
#- name: "Check installed packages"
#  package_facts:
#    manager: "auto"

    #- name: Stopped apache if installed
    #  service:
    #    name: nginx
    #    state: stopped
    #  when: "'nginx' in ansible_facts.packages"

- name: enable ssh and http(s) on ufw
  ufw:
    state: enabled
    rule: allow
    port: "{{ item }}"
    proto: tcp
  loop:
    - ssh
    - http
    - https

- name: install apache2
  apt:
    name: apache2
    state: latest
    update_cache: yes

- name: change listened port
  replace:
    path: /etc/apache2/apache2.conf
    regexp: 'Include ports.conf'
    replace: 'Listen 8080'
  notify: restart apache2
  when: frontend == "nginx"

- name: change listened port
  replace:
    path: /etc/apache2/apache2.conf
    regexp: 'Include ports.conf'
    replace: 'Listen 80'
  notify: restart apache2
  when: frontend == "apache"

- name: ensure apache2 is enabled
  service:
    name: apache2
    enabled: yes

- name: install mod_php
  apt:
    name: libapache2-mod-php{{ php_version_u }}
    state: latest
  notify: restart apache2

- name: install php modules
  apt:
    name: "{{ php_modules_u }}"
    state: latest
  notify: restart apache2

- name: enable apache2 mod_rewrite
  apache2_module:
    state: present
    name: rewrite
  notify: restart apache2

- name: clear default config file
  copy:
    content: '# disabled, use separate vhost configs'
    dest: /etc/apache2/sites-enabled/000-default.conf
    follow: yes
  notify: restart apache2

- name: add vhost config
  template:
    src: vhost_debian.j2
    dest: /etc/apache2/sites-available/{{ vhost }}.conf
  notify: restart apache2

- name: Ensure the default Apache port is 8080
  lineinfile:
    path: /etc/apache2/sites-available/{{ vhost }}.conf
    regexp: '^<VirtualHost'
    line: '<VirtualHost 127.0.0.1:8080>'
  notify: restart apache2
  when: frontend == "nginx"

- name: create vhost file symlink
  file:
    state: link
    path: /etc/apache2/sites-enabled/{{ vhost }}.conf
    src: /etc/apache2/sites-available/{{ vhost }}.conf
  notify: restart apache2

- name: Disable ports.conf file
  copy:
    content: '# disabled'
    dest: /etc/apache2/ports.conf

- name: tune mpm_prefork
  blockinfile:
    marker: ''
    path: /etc/apache2/apache2.conf
    insertafter: '^.*KeepAliveTimeout'
    block: |
      MaxClients 256
      StartServers 3
      MinSpareServers 3
      MaxSpareServers 16
      MaxRequestsPerChild 4096
  notify: restart apache2

- name: tune some php.ini vars
  ini_file:
    path: /etc/php/{{ php_version_u }}/apache2/php.ini
    section: PHP
    option: "{{ item.options }}"
    value: "{{ item.value }}"
  loop:
    - { options: 'post_max_size', value: '64M' }
    - { options: 'upload_max_filesize', value: '64M' }
    - { options: 'short_open_tag', value: 'On' }
    - { options: 'date.timezone', value: 'Asia/Almaty' }
  notify: restart apache2

- name: Change session save path in php.ini
  ini_file:
    path: /etc/php/{{ php_version_u }}/apache2/php.ini
    section: Session
    option: 'session.save_path'
    value: "'/tmp'" 
  notify: restart apache2

- name: Create /var/www/ vhost subdir
  file:
    state: directory
    path: /var/www/{{ vhost }}/
    owner: www-data
    group: www-data
    mode: 0755

- name: copy index file into virtualhost root
  copy:
    src: index.php
    dest: /var/www/{{ vhost }}/index.php
    owner: www-data
    group: www-data
    mode: 0644

- name: add php handler block for nginx
  blockinfile:
    marker: ' '
    path: /etc/nginx/vhosts/{{ vhost }}.conf
    insertafter: '## handler ##'
    block: |
      location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #httpoxy vulnerability fix
        proxy_set_header Proxy "";

        proxy_read_timeout 300;
        client_max_body_size 256m;

        proxy_buffer_size 16k;
        proxy_buffers 32 16k;
      }
  notify: restart nginx
  when: frontend == "nginx"
