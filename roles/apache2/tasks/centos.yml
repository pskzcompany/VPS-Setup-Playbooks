---
- name: add remi repository
  yum:
    disable_gpg_check: True
    name: http://mirror.neolabs.kz/remi/enterprise/remi-release-{{ ansible_distribution_major_version }}.rpm
    state: present

- name: install httpd
  yum:
    name: httpd
    state: latest

- name: ensure httpd is enabled
  service:
    name: httpd
    enabled: yes

- name: install mod_php
  yum:
    name: php{{ php_version }}-php
    state: latest
    enablerepo: remi-php{{ php_version }}
  notify: restart httpd
  when: ansible_facts['distribution_major_version'] != "8"

- name: Install mod_ssl for httpd
  yum:
    name: mod_ssl
    state: latest
  notify: restart httpd

- name: Clear mod ssl default conf file
  copy:
    content: '# disabled'
    dest: /etc/httpd/conf.d/ssl.conf

- name: install mod_php for centos8
  dnf:
    name: php{{ php_version }}-php
    install_weak_deps: no
    state: latest
    enablerepo: remi-php{{ php_version }}
  notify: restart httpd
  when: ansible_facts['distribution_major_version'] == "8"

- name: Enabled powertools repo # needed by libedit-devel on centos8
  shell: dnf config-manager --set-enabled powertools
  when: ansible_facts['distribution_major_version'] == "8"

- name: install libedit-devel # needed by php-devel package on centos8
  yum:
    name: libedit-devel
    enablerepo: PowerTools
    state: present
  when: ansible_facts['distribution_major_version'] == "8"

- name: install php modules for php version lower than 8
  yum:
    name: "{{ php_modules_notPHP8 }}"
    state: latest
    enablerepo: remi-php{{ php_version }}
  notify: restart httpd
  when: php_version != "80"

- name: install php modules for php 8
  yum:
    name: "{{ php_modules_PHP8 }}"
    state: latest
    enablerepo: remi-php{{ php_version }}
  notify: restart httpd
  when: php_version == "80"


- name: enable apache2 mod_rewrite
  apache2_module:
    state: present
    name: rewrite
  notify: restart httpd

- name: switch from mpm_event to mpm_prefork on centos8 # as event is not compatible with prefork
  lineinfile:
    path:  /etc/httpd/conf.modules.d/00-mpm.conf
    regexp: 'LoadModule mpm_event_module modules/mod_mpm_event.so'
    line: 'LoadModule mpm_prefork_module modules/mod_mpm_prefork.so'
  notify: restart httpd
  when: ansible_facts['distribution_major_version'] == "8"

- name: tune mpm_prefork
  blockinfile:
    path: /etc/httpd/conf/httpd.conf
    insertafter: '^Listen'
    marker: '#### Apache mpm_prefork tuning'
    block: |
      MaxClients 256
      StartServers 3
      MinSpareServers 3
      MaxSpareServers 16
      MaxRequestsPerChild 4096
  notify: restart httpd

# - name: tune mpm_event
#   blockinfile:
#     path: /etc/httpd/conf/httpd.conf
#     insertafter: '^Listen'
#     marker: '#### Apache mpm_event tuning'
#     block: |
#       ThreadsPerChild 10
#       ServerLimit 2
#       MaxRequestWorkers 20
#       AsyncRequestWorkerFactor 2
#   notify: restart httpd
#   when: ansible_facts['distribution_major_version'] == "8"
#   #numbers based on https://httpd.apache.org/docs/2.4/mod/event.html

- name: tune some php.ini vars
  ini_file:
    path: /etc/opt/remi/php{{ php_version }}/php.ini
    section: PHP
    option: "{{ item.options }}"
    value: "{{ item.value }}"
  loop:
    - { options: 'post_max_size', value: '64M' }
    - { options: 'upload_max_filesize', value: '64M' }
    - { options: 'short_open_tag', value: 'On' }
    - { options: 'date.timezone', value: 'Asia/Almaty' }
  notify: restart httpd

- name: Change session save path in php.ini
  ini_file:
    path: /etc/opt/remi/php{{ php_version }}/php.ini
    section: Session
    option: 'session.save_path'
    value: "'/tmp'" 
  notify: restart httpd

- name: make remi php binary work using php command
  file:
    state: link
    src: /opt/remi/php{{php_version}}/root/usr/bin/{{ item.source }}
    dest: /usr/bin/php{{ item.target }}
  loop:
    - { source: 'php', target: ''}
    - { source: 'php-cgi', target: '-cgi'}
    - { source: 'phar.phar', target: '-phar'}

- name: Create /var/www/ vhost subdir
  file:
    state: directory
    path: /var/www/{{ vhost }}/
    owner: apache
    group: apache
    mode: 0755

- name: add vhost config
  template:
    src: vhost_centos.j2
    dest: /etc/httpd/conf.d/{{ vhost }}.conf
  notify: restart httpd

- name: copy index file into virtualhost root
  copy:
    src: index.php
    dest: /var/www/{{ vhost }}/index.php
    owner: apache
    group: apache
    mode: 0644

- name: Enable http(s) on firewall-cmd
  firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: yes
    immediate: yes
    zone: public
  loop:
    - http
    - https
