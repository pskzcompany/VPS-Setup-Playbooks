---
- name: Gather service facts
  service_facts:

- name: Set frontend fact to nginx if nginx service is running
  set_fact:
    frontend: "nginx"
  when: "'nginx.service' in ansible_facts.services and ansible_facts.services['nginx.service'].state == 'running'"

- name: Set frontend fact to httpd if httpd service is running and nginx is not
  set_fact:
    frontend: "httpd"
  when: "'httpd.service' in ansible_facts.services and ansible_facts.services['httpd.service'].state == 'running' and (frontend is not defined or frontend != 'nginx')"

- name: create site user
  user:
    name: "{{ short_vhost }}"
    password: "{{ lookup('password', '/root/01-sftp_password chars=ascii_letters,digits,hexdigits length=15') | password_hash('sha512') }}"
    shell: /sbin/nologin
    home: /var/www/

- name: Create /root/01-sftp_password if it doesn't exist
  file:
    path: /root/01-sftp_password
    state: touch
    owner: root
    group: root
    mode: '0600'

- name: insert site user name into user password file
  blockinfile:
    dest: /root/01-sftp_password
    insertbefore: BOF
    block: |
      Доступ для загрузки файлов сайта (SFTP)
      ip-адрес: {{ ansible_default_ipv4.address }}
      Тип подключений: SFTP
      Порт: 22
      Папка сайта: /var/www/{{ vhost }}
      Пользователь: {{ short_vhost }}

- name: create user uid
  user:
    name: "{{ short_vhost }}"
    uid: 48
    group: nginx
    non_unique: yes
  when: frontend == "nginx"

- name: create user uid
  user:
    name: "{{ short_vhost }}"
    uid: 48
    group: httpd
    non_unique: yes
  when: frontend == "httpd"

- name: Change /var/www group and perm
  file:
    state: directory
    path: /var/www
    owner: root
    group: httpd
    mode: 0775
  when: frontend == "httpd"

- name: Change /var/www group and perm
  file:
    state: directory
    path: /var/www
    owner: root
    group: nginx
    mode: 0775
  when: frontend == "nginx"

- name: add user to sshd config
  blockinfile:
    marker: ''
    path: /etc/ssh/sshd_config
    insertafter: EOF
    block: |
      Match User {{ short_vhost }}
      ForceCommand internal-sftp
      PasswordAuthentication yes
      #ChrootDirectory /var/www/{{ vhost }}/
      PermitTunnel no
      AllowAgentForwarding no
      AllowTcpForwarding no
      X11Forwarding no
  notify: restart sshd
